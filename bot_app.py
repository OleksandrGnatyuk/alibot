# bot_app.py
import os
import asyncio
import re

import uuid # –î–ª—è —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö —ñ–º–µ–Ω —Ñ–∞–π–ª—ñ–≤
from aiogram import Bot, Dispatcher, F
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import Command
from aiogram.types import Message # Inline –∫–Ω–æ–ø–∫–∏ –ø–æ–∫–∏ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ
from aiogram.exceptions import TelegramAPIError
from aiogram.enums import ParseMode
from dotenv import load_dotenv

from aliexpress_app import create_aliexpress_affiliate_links
from search_goods_by_photo import search_with_selenium
from utils import clean_url
from logger_ import get_logger


logger = get_logger(__name__)

load_dotenv()

TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHANNEL_ID_STR = os.getenv("TELEGRAM_CHANNEL_ID")
ALIEXPRESS_APP_KEY = os.getenv("ALIEXPRESS_APP_KEY")
ALIEXPRESS_APP_SECRET = os.getenv("ALIEXPRESS_APP_SECRET")
ALIEXPRESS_TRACKING_ID = os.getenv("ALIEXPRESS_TRACKING_ID")

# --- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è ID –∫–∞–Ω–∞–ª—É  ---
if not TELEGRAM_CHANNEL_ID_STR:
    logger.error("–ü–æ–º–∏–ª–∫–∞: TELEGRAM_CHANNEL_ID –Ω–µ –∑–∞–¥–∞–Ω–æ —É .env —Ñ–∞–π–ª—ñ!")
    exit()
try:
    TELEGRAM_CHANNEL_ID = int(TELEGRAM_CHANNEL_ID_STR)
except ValueError:
    if TELEGRAM_CHANNEL_ID_STR.startswith('@'):
         TELEGRAM_CHANNEL_ID = TELEGRAM_CHANNEL_ID_STR
    else:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç TELEGRAM_CHANNEL_ID: {TELEGRAM_CHANNEL_ID_STR}.")
        exit()
# --- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω—à–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö ---
if not all([TELEGRAM_BOT_TOKEN, ALIEXPRESS_APP_KEY, ALIEXPRESS_APP_SECRET, ALIEXPRESS_TRACKING_ID]):
    logger.error("–ü–æ–º–∏–ª–∫–∞: –ù–µ –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∑–∞–¥–∞–Ω—ñ —É .env —Ñ–∞–π–ª—ñ!")
    exit()

# --- –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ ---
bot = Bot(token=TELEGRAM_BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
logger.info("–ë–æ—Ç Aiogram –∑–∞–ø—É—â–µ–Ω–æ.")
dp = Dispatcher()

# --- –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start ---
@dp.message(Command(commands=["start"]))
async def start_command(message: Message):
    html_text = """‚úã–í—ñ—Ç–∞—é, —Ç–∏ —É —á–∞—Ç-–±–æ—Ç—ñ <a href="https://t.me/AliDealsUA_bot">–ó–Ω–∞—Ö—ñ–¥–∫–∏ AliExpress UA</a>, —è–∫–∏–π –ø–æ–¥–∞—Ä—É—î —Ç–æ–±—ñ –Ω–∞–π–±—ñ–ª—å—à—ñ –ó–ù–ò–ñ–ö–ò –Ω–∞ —Ç–æ–≤–∞—Ä–∏ –∑ –ê–ª—ñ–µ–∫—Å–ø—Ä–µ—Å.

–ù–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ, –±—É–¥—å-—è–∫–µ, –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∑ Aliexpress, –∞ —è –∑–≥–µ–Ω–µ—Ä—É—é —Ç–æ–±—ñ 3 –∫—Ä—É—Ç–∏—Ö –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∑—ñ –∑–Ω–∏–∂–∫–∞–º–∏: –∑–∞ <strong>–ú–û–ù–ï–¢–ò</strong>, –Ω–∞ <strong>–°–£–ü–ï–†–ó–ù–ò–ñ–ö–ò</strong> —Ç–∞ <strong>–û–ë–ú–ï–ñ–ï–ù–Ü –ü–†–û–ü–û–ó–ò–¶–Ü–á</strong>.

–ê–±–æ üì∏ <b>–Ω–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä—É</b>, —ñ —è —Å–ø—Ä–æ–±—É—é –∑–Ω–∞–π—Ç–∏ —Å—Ö–æ–∂—ñ –Ω–∞ AliExpress!

üòé–©–æ –∑–∞–ª–∏—à–∏—Ç—å—Å—è —Ç–æ–±—ñ –∑—Ä–æ–±–∏—Ç–∏? –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–π—Ç–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º, —è–∫—ñ —è —Ç–æ–±—ñ –≤—ñ–¥–ø—Ä–∞–≤–ª—é, –æ–±—Ä–∞—Ç–∏ –¥–ª—è —Å–µ–±–µ –Ω–∞–π–≤–∏–≥—ñ–¥–Ω—ñ—à—É –∑–Ω–∏–∂–∫—É —Ç–∞ –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.

‚ÄºÔ∏è–ë—É–¥—å –ª–∞—Å–∫–∞, –±—É–¥—å —É–≤–∞–∂–Ω–∏–º, —Ä–µ–∞–ª—å–Ω—É –∑–Ω–∏–∂–∫—É –∑–∞ –ú–û–ù–ï–¢–ò –ê–ª—ñ–µ–∫—Å–ø—Ä–µ—Å –ø–æ–∫–∞–∂–µ –ª–∏—à–µ –ø—ñ—Å–ª—è —Ç–æ–≥–æ, —è–∫ —Ç–∏ –Ω–∞—Ç–∏—Å–Ω–µ—à —á–æ—Ä–Ω—É –∫–Ω–æ–ø–∫—É  ¬´–∫—É–ø–∏—Ç–∏ –∑–∞—Ä–∞–∑¬ª —Ç–∞ ¬´–ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏¬ª.–í–¥–∞–ª–∏—Ö —Ç–æ–±—ñ –ø–æ–∫—É–ø–æ–∫ü•∞

üë≠<strong>–Ø–∫—â–æ –±—É–≤ –∫–æ—Ä–∏—Å–Ω–∏–º, –ø–æ–¥—ñ–ª–∏—Å—å –º–Ω–æ—é –∑ –¥—Ä—É–≥–æ–º –∞–±–æ –ø–æ–¥—Ä—É–≥–æ—é. –î—è–∫—É—é</strong>üí∞"""
    await message.answer(html_text, parse_mode="HTML", disable_web_page_preview=True)

# --- –§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤ –∫–∞–Ω–∞–ª –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º–∏ –Ω–∞ —Ç–æ–≤–∞—Ä–∏ –≤ —Ä–æ–∑–¥—ñ–ª–∞—Ö –∑—ñ –∑–Ω–∏–∂–∫–∞–º–∏
async def send_product_to_telegram_channel(bot_instance: Bot, ali_url: str):
    try:
        (coin_affiliate_link, super_discount_affiliate_link,
         limited_discount_affiliate_link, title_product, main_photo) = create_aliexpress_affiliate_links(ali_url)

        caption = f"üëáÔ∏è –í–∞—à—ñ –∑–Ω–∏–∂–∫–∏ –¥–ª—è —Ç–æ–≤–∞—Ä—É: {title_product} üëáÔ∏è\n\n"
        caption += f"‚ú® <strong>–ó –º–æ–Ω–µ—Ç–Ω–∏–º–∏ –∑–Ω–∏–∂–∫–∞–º–∏:</strong> ‚ú®\n{coin_affiliate_link}\n\n"
        caption += f"üí∞ <strong>–ó —Å—É–ø–µ—Ä–∑–Ω–∏–∂–∫–æ—é:</strong>\n{super_discount_affiliate_link}\n\n"
        caption += f"üí∞ <strong>–õ—ñ–º—ñ—Ç–æ–≤–∞–Ω—ñ –∑–Ω–∏–∂–∫–∏:</strong>\n{limited_discount_affiliate_link}"

        if main_photo:
            await bot_instance.send_photo(
                chat_id=TELEGRAM_CHANNEL_ID,
                photo=main_photo,
                caption=caption,
                parse_mode=ParseMode.HTML,
            )
            logger.info(f"–ù–∞–¥—ñ—Å–ª–∞–Ω–æ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä—É '{title_product}' –≤ –∫–∞–Ω–∞–ª {TELEGRAM_CHANNEL_ID}")
        else:
             await bot_instance.send_message(
                chat_id=TELEGRAM_CHANNEL_ID,
                text=caption,
                parse_mode=ParseMode.HTML,
                disable_web_page_preview=True
            )
             logger.info(f"–ù–∞–¥—ñ—Å–ª–∞–Ω–æ —Ç–µ–∫—Å—Ç –ø—Ä–æ —Ç–æ–≤–∞—Ä '{title_product}' –≤ –∫–∞–Ω–∞–ª {TELEGRAM_CHANNEL_ID}")

    except TelegramAPIError as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ API Telegram –ø—ñ–¥ —á–∞—Å –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤ –∫–∞–Ω–∞–ª: {e}")
    except Exception as e:
        logger.error(f"–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤ –∫–∞–Ω–∞–ª: {e}")


# --- –û–±—Ä–æ–±–Ω–∏–∫ —Ñ–æ—Ç–æ–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å ---
@dp.message(F.photo)
async def handle_photo_search(message: Message):
    """–û–±—Ä–æ–±–ª—è—î –æ—Ç—Ä–∏–º–∞–Ω–µ —Ñ–æ—Ç–æ –¥–ª—è –ø–æ—à—É–∫—É –Ω–∞ AliExpress."""
    photo = message.photo[-1] # –ë–µ—Ä–µ–º–æ –Ω–∞–π–±—ñ–ª—å—à–µ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è
    file_id = photo.file_id
    temp_file_path = None # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —à–ª—è—Ö –¥–æ —Ç–∏–º—á–∞—Å–æ–≤–æ–≥–æ —Ñ–∞–π–ª—É

    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é, —è–∫—â–æ —ó—ó –Ω–µ–º–∞—î
    temp_dir = "temp_images"
    os.makedirs(temp_dir, exist_ok=True)

    try:
        await message.reply("üì∏ –û—Ç—Ä–∏–º–∞–≤ —Ñ–æ—Ç–æ. –ü–æ—á–∏–Ω–∞—é –ø–æ—à—É–∫ —Å—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ –Ω–∞ AliExpress... –¶–µ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ —Ö–≤–∏–ª–∏–Ω—É-–¥–≤—ñ.")

        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–æ—Ç–æ —É —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª
        file_info = await bot.get_file(file_id)
        file_ext = os.path.splitext(file_info.file_path)[1] if file_info.file_path else '.jpg' # –ë–µ—Ä–µ–º–æ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è
        # –ì–µ–Ω–µ—Ä—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–µ —ñ–º'—è —Ñ–∞–π–ª—É
        temp_file_name = f"{uuid.uuid4()}{file_ext}"

        # –°—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ–¥–Ω–æ—Å–Ω–∏–π —à–ª—è—Ö
        relative_temp_file_path = os.path.join(temp_dir, temp_file_name)
        # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ —É –ê–ë–°–û–õ–Æ–¢–ù–ò–ô —à–ª—è—Ö ***
        absolute_temp_file_path = os.path.abspath(relative_temp_file_path)

        logger.info(f"–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ —É —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª: {absolute_temp_file_path}")  # –õ–æ–≥—É—î–º–æ –∞–±—Å–æ–ª—é—Ç–Ω–∏–π —à–ª—è—Ö
        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–∞–π–ª –∑–∞ –∞–±—Å–æ–ª—é—Ç–Ω–∏–º —à–ª—è—Ö–æ–º
        await bot.download(file=file_id, destination=absolute_temp_file_path)
        logger.info(f"–§–æ—Ç–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.")

        # –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å—Ç–∞—Ä—Ç–æ–≤—É URL –¥–ª—è –ø–æ—à—É–∫—É
        start_url = "https://www.aliexpress.com/"

        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–æ—à—É–∫ –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ, —â–æ–± –Ω–µ –±–ª–æ–∫—É–≤–∞—Ç–∏ –±–æ—Ç–∞
        loop = asyncio.get_running_loop()
        # –í–ò–ü–†–ê–í–õ–ï–ù–û –õ–û–ì–£–í–ê–ù–ù–Ø:
        logger.info(f"–ó–∞–ø—É—Å–∫ search_with_selenium –¥–ª—è —Ñ–∞–π–ª—É {absolute_temp_file_path}")
        search_results_data = await loop.run_in_executor(
            None,  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –≤–∏–∫–æ–Ω–∞–≤–µ—Ü—å
            search_with_selenium,
            start_url,
            absolute_temp_file_path  # –ü–µ—Ä–µ–¥–∞—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —à–ª—è—Ö
        )
        logger.info(f"search_with_selenium –∑–∞–≤–µ—Ä—à–∏–≤ —Ä–æ–±–æ—Ç—É.")

        # –û–±—Ä–æ–±–ª—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
        if search_results_data and search_results_data.get("results"):
            results = search_results_data["results"]
            response_text = "üîç –û—Å—å —â–æ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —Å—Ö–æ–∂–æ–≥–æ:\n\n"
            for i, item in enumerate(results, 1):
                # –ï–∫—Ä–∞–Ω—É—î–º–æ HTML —Å–∏–º–≤–æ–ª–∏ –≤ –Ω–∞–∑–≤—ñ
                title = item.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∏').replace('<', '&lt;').replace('>', '&gt;')
                url = item.get('url', '#')

                photo_url = item.get('photo')
                if photo_url:
                    try:
                        await bot.send_photo(chat_id=message.chat.id, photo=photo_url,
                                             caption=f"{i}. <a href='{url}'>{title}</a>", parse_mode=ParseMode.HTML)
                    except TelegramAPIError as e:
                        logger.error(f"–ü–æ–º–∏–ª–∫–∞ Telegram API –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —Ñ–æ—Ç–æ –∑–∞ URL: {e}")
                        response_text += f"{i}. <a href='{url}'>{title}</a>\n  URL —Ñ–æ—Ç–æ: {photo_url} (–ü–æ–º–∏–ª–∫–∞ Telegram)\n\n"
                    except Exception as e:
                        logger.error(f"–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —Ñ–æ—Ç–æ –∑–∞ URL: {e}")
                        response_text += f"{i}. <a href='{url}'>{title}</a>\n  URL —Ñ–æ—Ç–æ: {photo_url} (–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞)\n\n"
                else:
                    response_text += f"{i}. <a href='{url}'>{title}</a>\n  –§–æ—Ç–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ\n\n"


                # –û–±–º–µ–∂–µ–Ω–Ω—è –¥–æ–≤–∂–∏–Ω–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                if len(response_text) > 3800:
                     await message.answer(response_text, parse_mode=ParseMode.HTML, disable_web_page_preview=True)
                     response_text = "...\n\n"

            if response_text.strip() and response_text != "...\n\n":
                 await message.answer(response_text, parse_mode=ParseMode.HTML, disable_web_page_preview=True)

        elif search_results_data is None:
            await message.reply("üòï –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –ø–æ—à—É–∫—É –Ω–∞ AliExpress. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
        else: # search_results_data —î, –∞–ª–µ results –ø–æ—Ä–æ–∂–Ω—ñ–π
            await message.reply("ü§∑ –ù–∞ –∂–∞–ª—å, –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —Å—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ –∑–∞ —Ü–∏–º –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º.")

    except TelegramAPIError as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ API Telegram –ø—ñ–¥ —á–∞—Å –æ–±—Ä–æ–±–∫–∏ —Ñ–æ—Ç–æ: {e}")
        await message.reply("–ü–æ–º–∏–ª–∫–∞ Telegram –ø—ñ–¥ —á–∞—Å –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É.")
    except Exception as e:
        logger.exception(f"–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –æ–±—Ä–æ–±–∫–∏ —Ñ–æ—Ç–æ:")
        await message.reply("–°—Ç–∞–ª–∞—Å—è –Ω–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
    finally:
        # –í–∏–¥–∞–ª—è—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –ê–ë–°–û–õ–Æ–¢–ù–ò–ô —à–ª—è—Ö
        if absolute_temp_file_path and os.path.exists(absolute_temp_file_path):
            try:
                os.remove(absolute_temp_file_path)
                logger.info(f"–¢–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª –≤–∏–¥–∞–ª–µ–Ω–æ: {absolute_temp_file_path}")
            except OSError as e:
                logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª {absolute_temp_file_path}: {e}")


# --- –û–±—Ä–æ–±–Ω–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (–¥–ª—è –ø–æ—Å–∏–ª–∞–Ω—å) ---
@dp.message()
async def handle_message(message: Message):
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –º—ñ—Å—Ç–∏—Ç—å —Ç–µ–∫—Å—Ç (–Ω–∞ –≤–∏–ø–∞–¥–æ–∫ —ñ–Ω—à–∏—Ö —Ç–∏–ø—ñ–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å)
    if not message.text:
        await message.reply("–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–æ–≤–∞—Ä AliExpress –∞–±–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é —Ç–æ–≤–∞—Ä—É.")
        return

    # –ü–∞—Ç–µ—Ä–Ω –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏—Ö –ø–æ—Å–∏–ª–∞–Ω—å –Ω–∞ —Ç–æ–≤–∞—Ä
    aliexpress_url_pattern = re.compile(
        r'(https?://)?([\w.-]+\.)?aliexpress\.com/(item/|p/|store/product/|af/|i/)\d+(\.html|\?)?', re.IGNORECASE) # –†–æ–∑—à–∏—Ä–µ–Ω–æ –ø–∞—Ç–µ—Ä–Ω
    # –ü–∞—Ç–µ—Ä–Ω –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö –ø–æ—Å–∏–ª–∞–Ω—å a.aliexpress.com
    short_url_pattern = re.compile(r'https?://a\.aliexpress\.com/_[\w\d]+', re.IGNORECASE)


    if aliexpress_url_pattern.search(message.text) or short_url_pattern.search(message.text):
        original_url = message.text
        logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: {original_url}")
        # –û—á–∏—Å—Ç–∫–∞ URL (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É –≤–µ—Ä—Å—ñ—é)
        url_to_process = clean_url(original_url)
        logger.info(f"–û—á–∏—â–µ–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è API: {url_to_process}")
        await message.reply("‚è≥ –®—É–∫–∞—é –í–∞—à —Ç–æ–≤–∞—Ä —É —Ä–æ–∑–¥—ñ–ª–∞—Ö –∑—ñ –∑–Ω–∏–∂–∫–∞–º–∏... –¶–µ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ –∫—ñ–ª—å–∫–∞ —Å–µ–∫—É–Ω–¥.")
        await send_product_to_telegram_channel(bot, url_to_process)
    else:
        await message.reply("–¶–µ –Ω–µ —Å—Ö–æ–∂–µ –Ω–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è AliExpress. –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–æ–≤–∞—Ä –∞–±–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é.")

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
async def main():
    await bot.delete_webhook(drop_pending_updates=True) # –í–∞–∂–ª–∏–≤–æ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥—ñ –∑ –≤–µ–±—Ö—É–∫—ñ–≤ –Ω–∞ –ø–æ–ª—ñ–Ω–≥
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º—ñ polling...")
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())